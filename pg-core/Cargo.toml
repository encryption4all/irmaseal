[package]
name = "pg-core"
description = "PostGuard core library communication and bytestream operations."
version = "0.3.0-rc.0"
authors = [
  "Leon Botros <l.botros@cs.ru.nl",
  "Wouter Geraedts <git@woutergeraedts.nl>"
]
edition = "2021"
license = "MIT"
keywords = ["ibe", "encryption", "ecc"]
homepage = "https://github.com/encryption4all/postguard/tree/main/pg-core"
categories = ["cryptography"]

[dependencies]
ibe = { path = "./../../ibe", features = ["cgwkv", "mkem"] }
ibs = { path = "./../../ibs" }
irma = "0.2.1"
rand = { version = "0.8", default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
subtle = "2.3"
tiny-keccak = { version = "2.0", features = ["sha3"] }
base64ct = "1.5"
bincode = "1.3.3"

# For both stream features and the web implementation.
futures = { version = "0.3", optional = true }

# For the Rust Crypto backend.
aead = { version = "0.5", features = ["stream", "alloc"], optional = true }
aes-gcm = { version = "0.10", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
futures = "0.3"
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = { version = "0.2" }
js-sys = { version = "0.3" }
cipher = { version = "0.3" }
wasm-bindgen-futures = { version = "0.4" }
serde-wasm-bindgen = { version = "0.4" }
web-sys = { version = "0.3", features = [
  "SubtleCrypto",
  "AesGcmParams",
  "Crypto",
  "CryptoKey",
] }

[dev-dependencies]
tokio = { version = "1.24.3", features = ["full"] }
tokio-util = { version = "0.7.4", features = ["compat"] }
serde-transcode = "1.1.1"
criterion = "0.4"
rand = "0.8.5"
futures = { version = "0.3", features = ["io-compat"]}
futures-util = "0.3.25"

[features]
default = ["rust"]
rust = ["aead", "aes-gcm"]
web = []
stream = ["futures", "aead/stream"]
test = [] 

[[bench]]
name = "main"
harness = false
required-features = ["test", "rust", "stream"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
target = "wasm32-unknown-unknown"
